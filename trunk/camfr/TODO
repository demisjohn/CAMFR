-bug: symmetric cavity (top,top) gives problems
-bug: stack field for points in incidence or exit medium
-check if flipped scatterers work
-push limit for # lateral periods
-core in get/set params
-circ_mode check: 0/0
-infstack recalc modes, inf*(notation), diagslab, unexpected powerflow
 in bandgap crow_wg
-check for presence of gain medium in cavity
-prevent user from from making a stack with uniform layers with different
 widths
-default planar::set_theta (Peter)
-improve documentation for Planar, flipped scatteres, walls


CAMFR 3D

-Section: UniformSection, auto-partitioned section, walls(E, H, TBC, PC), 
 nmax=neff_core?, eps_trace_coarse, precision, TEM mode, SectionFlux,
 complex modes, determinant faster than eigenvalues?
-dispersion relation of 2D slabs:
   -do not handle left and right walls through expressions
   -try to eliminate need for O_II_I in interface.cpp


MEDIUM TERM:

-speed up M - U1, where U1 is unit matrix
-short cut check_error in Bessel functions

-more general handling of decoupled waveguides

-eliminate warning for zero transmission through wall when calculating 
 fields in stack.

-new function: stack::field(r0, r1, delta_r) to calc field on a grid. 
 Ability to cache field profiles and speed up.
-stack field on layer discontinuity: speed up by not propagating.
-cleverer inc/ext_field_expansion that does not calculate internal fields
 when not needed

-implement Bloch modes for MonoScatterers
-speed up Bloch for symmetric structures

-investigate worse convergence for TM modes

-tune new complex zero finder
-related: make definition of C_upperright uniform
-related: test it for leaky modes
-related: reenable complex modes in circ
-related: test sign of beta in backward modes in circ (using power flux)

-use asymptotic expansions for circular structures
-more general interactive visualisation of mode profiles (phase, components)
-write a GUI for defining complicated structures
-integrated plotting: Kmatplot, dislin, plplot, SciGrafica, SciPy?
-add Python docbook comments

-making stripping of executable dependent on debug switches

-implement CoordStretcher for slabs
-automatic setting of global.orthogonal
-explicitly return *all* modes found in Cavity::find_all_modes
-make 'precision' dynamic
-global numeric status register?

-cavity::calc_sigma: instead of using only the fw field, is it more robust
 to use fw_backward field to determine dominant mode?
-cavity: instead of using SVD, use eigenvalue decomposition or Arnoldi
-try out LAPACK 3.0 special svd routine (zgesdd)

-PC_wall: add waveguide interface if needed
-faster location of PC_wall eigenmodes
-convert slabwall PC to Material Stacks
-slabwall: cache get_R12 for startfield, get_error
-kill virtual functions in SlabWall (perhaps elsewhere too, get_kz()?)


SOURCE MAINTENANCE

-build: Eliminate as many makefiles as possible, slab_global.beta
-remove set_precision_enhancement and friends
-make material.get_eps_mu
-get rid of S_T, T_T in field_calc
-make the C++ naming convention more uniform and in sync with Python names
 (e.g. circ_disp -> CircDisp, Material_length -> MaterialLength, ...)
-use BaseMaterial where appropriate
-completely redesign / rework Expression and its link to stack


LOW PRIORITY

-is reciprocity exploitable?
-auto-partitioning of stacks in optimal diagonal substacks
-investigate Airy media
-test corner effects

-narrower minima in cavity::find_all_modes? (Peter)
-tilde in S_scheme: return more refs? (Peter)
-split scaling (Peter)
-scaling for complex modes, scaling when tracing (Peter)

-influence of normalisation on observables (sign sqrt, factor, ..)
 check sqrt(power) -> -1 norm (Peter)
-related: consolidate signedsqrt in material.h and circ.cpp (Peter)


THEORY:

-check formulas for power circ_1
-check sign_TM in slabdisp
-quadrant leaky modes (upperright neg imag?)
-loss in cladding (no PML): check quadrant
-analytic solution uniform TBC
-degeneracy for increasing PML in Slab AlOx(1) + AlGas(1) + AlOx(1)
-check Lahart P-parameter with EH/HE distinction
-model coupled cavity VCSEL, DFB laser
