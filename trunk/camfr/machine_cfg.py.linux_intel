# This Python script contains all the machine dependent settings
# needed during the build process.

# Compilers to be used.

cc  = "icc"
cxx = "icc"
f77 = "ifc"

# Compiler flags.
#
# Note: for the Fortran name definition you can define one of the following
#       preprocessor macros:
#
#           FORTRAN_SYMBOLS_WITHOUT_TRAILING_UNDERSCORES
#           FORTRAN_SYMBOLS_WITH_SINGLE_TRAILING_UNDERSCORE
#           FORTRAN_SYMBOLS_WITH_DOUBLE_TRAILING_UNDERSCORES


base_flags = "-DFORTRAN_SYMBOLS_WITH_SINGLE_TRAILING_UNDERSCORE -DNDEBUG -g"

flags       = base_flags + " -KPIC"
flags_noopt = base_flags + " -KPIC -O0"
fflags      = base_flags + " -132"


# Include directories.

include_dirs ="/home/pbienst/blitz-20001213 \
	       /home/pbienst/boost_cvs/boost \
	       /home/pbienst/local/include/python2.2 \
	       /home/pbienst/arpack++/include"

# Temporary workaround waiting for shared lib support in scons.

camfrlib = "libcamfr.a"
dllsuffix = ".so"
dllcommand = "ld -shared  \
        camfr/camfr_wrap.o \
	-L/home/pbienst/camfr_work/camfr \
	-L/home/pbienst/blitz-20001213/lib \
	-L/opt/intel/mkl/lib/32 \
        -L/home/pbienst/local/lib \
	-L/home/pbienst/ARPACK \
        -L/opt/intel/compiler60/ia32/lib \
	-lcamfr -lblitz -lbpl -larpack -lmkl_lapack -lmkl_p3 \
        -lPEPCF90 -lIEPCF90 -lintrins -lF90 \
        -o camfr/_camfr" + dllsuffix

#TODO: try linking with libIMF

#     -Kc++eh -Krtti   \

# Command to strip library of excess symbols:

#-lF90 -lCEPCF90 -lPEPCF90 -lintrins -i_dynamic  \

strip_command = "" #"strip --strip-unneeded camfr/_camfr" + dllsuffix

# Extra files to copy to installation directory.

extra_files = []
